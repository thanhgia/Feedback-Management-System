@model ModelsFeedbackSystem.Models.Feedback
@{
    ViewData["Title"] = "ShowAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Feedback - Feedback Management System</title>
<link href="~/content/css/jquery-ui.min.css" rel="stylesheet" />
<link href="~/MainBootstrap/documentation/css/custom.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        $('#equipmentDropDown').mousedown(function (e) {
            e.preventDefault();

            var select = this;
            var scroll = select.scrollTop;

            e.target.selected = !e.target.selected;

            setTimeout(function () { select.scrollTop = scroll; }, 0);

            $(select).focus();
            showEquip();
        });
        $('#equipmentDropDown').mousemove(function (e) {
            e.preventDefault();
        });

        $("#container").on("click", "div", function () {
            $(".selected").removeClass("selected");
            $(this).addClass("selected");
            $("#imageIndex").val($(this).attr("id"));
        });

        $("#confirmImage").click(function (e) {
            $("#imageCreate").empty();
            var listImage = @Html.Raw(ViewBag.listImage);
            var imageIndex = $("#imageIndex").val().split("-");

            var container = document.getElementById('imageCreate');
            var img = document.createElement('img');
            img.src = listImage[imageIndex[1]].ImageLink;
            img.setAttribute("width", 110);
            img.setAttribute("height", 110);
            container.append(img);

            $("#imageId").val(imageIndex[0]);
        });
    });

    function showImage() {
        $("#container").empty();
        var listImage = @Html.Raw(ViewBag.listImage);
        var container = document.getElementById('container');
        for (var i = 0; i < listImage.length; i++) {

            var div = document.createElement("div");
            div.setAttribute("id", listImage[i].ImageId + "-" + i);
            div.setAttribute("class", "divFeedbackImage");

            container.append(div);

            var img = document.createElement('img');
            img.src = listImage[i].ImageLink;
            img.className = "totalImgFeedback";
            img.setAttribute("width", 150);
            img.setAttribute("height", 150);
            div.append(img);
        }
    }

    function chooseAll(group) {
        var list = document.getElementsByClassName(group);
        var check = true;
        for (var i = 0; i < list.length; i++) {
            if (!list[i].selected) {
                check = false;
                break;
            }
        }
        for (var i = 0; i < list.length; i++) {
            list[i].selected = !check;
        }
        showEquip();
    }

    function showEquip() {
        var dropDown = document.getElementById("equipmentDropDown");
        var listEquip = "";
        for (var i = 0; i < dropDown.options.length; i++) {
            if (dropDown.options[i].selected == true) {
                listEquip += dropDown.options[i].value + ", ";
            }
        }
        $('#equipmentId').text(listEquip);
    }

    //get values for field in update popup
    function getId(i) {
        var obj = @Html.Raw(ViewBag.listJson);
        var convert = JSON.stringify(obj);
        var equipsJson = JSON.parse(convert);
        var equip = equipsJson[i];
        $('#upEquipId').text(equip.EquipmentId);
        $('#upEquipGroupId').prop('selectedIndex', i);
        $('#upEquipName').val(equip.EquipmentName);
        $('#upNote').text(equip.Note);
        if (equip.Active == 1) {
            $('#upActive').text("Đã kích hoạt");
        }
        else {
            $('#upActive').text("Chưa kích hoạt");
        }
        $('#upActive').val(equip.Active);

        if (equip.Type == 1) {
            $('#upType').text("Kiosk");
        }
        else {
            $('#upType').text("QR code");
        }

        $('#upEquipmentId').val(equip.EquipmentId);
        $('#upType').val(equip.Type);
        $('#upBrandId').val("B000001");
        $('#upSecurityCode').val(equip.EquipmentSercurityCode);
        $('#upUsername').val("MaiHT");
        $('#upCreateDate').val(new Date().toISOString().slice(0, 19).replace('T', ' '));
    }

    function getDetail(i) {
        var obj = @Html.Raw(ViewBag.listJson);
        var convert = JSON.stringify(obj);
        var feedbackJson = JSON.parse(convert);
        var feedback = feedbackJson[i];

        $('#detailFeedbackId').text(feedback.FeedbackId);
        $('#detailFeedbackName').text(feedback.Title);
        $('#detailFeedbackDes').text(feedback.Description);
        $('#detailThanksId').text(feedback.ThanksSentenceId);
        $('#detailGiftId').text(feedback.GiftId);
        $('#detailStartTime').text(feedback.StartTime);
        $('#detailEndTime').text(feedback.EndTime);
        if (feedback.State == 1) {
            $('#detailFeedbackState').text("Đã kích hoạt");
        }
        else {
            $('#detailFeedbackState').text("Chưa kích hoạt");
        }

        $('#detailFeedbackDate').text(feedback.CreateDate);
    }

    function getFeedbackId(id) {
        $('#delFeedbackId').val(id);
    }

    function showDetail(feedbackId) {
        window.location.href = '@Url.Action("ViewDetail", "Feedback")?feedbackId=' + feedbackId;
    }

    function createValue() {
        if ($("#equipGroupType :selected").text() == "Kiosk") {
            $('#equipGroupType').val(1);
        } else {
            $('#equipGroupType').val(2);
        }
        $('#brandId').val("B000001");
        $('#username').val("MaiHT");
        $('#isActive').val(1);

        var start = $('#startDate').val().split('/');
        var end = $('#endDate').val().split('/');
        $('#startTime').val(start[2] + '-' + start[0] + '-' + start[1] + 'T' + $('#hourBegin').val() + ':' + $('#minuteBegin').val() + ':00');
        $('#endTime').val(end[2] + '-' + end[0] + '-' + end[1] + 'T' + $('#hourEnd').val() + ':' + $('#minuteEnd').val() + ':00');

        $('#createDate').val(end[2] + '-' + end[0] + '-' + end[1] + 'T' + $('#hourEnd').val() + ':' + $('#minuteEnd').val() + ':00');
    }

    function validateDate() {
        var start = $('#startDate').val().split('/');
        var end = $('#endDate').val().split('/');
        var startTime = new Date(start[2], start[0] - 1, start[1], $('#hourBegin').val(), $('#minuteBegin').val(), '00');
        var endTime = new Date(end[2], end[0] - 1, end[1], $('#hourEnd').val(), $('#minuteEnd').val(), '00');
        var check = true;

        if (startTime >= endTime) {
            check = false;
            $('#errorTime').html("Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc");
        }
        else if (endTime <= new Date()) {
            check = false;
            $('#errorTime').html("Thời gian của khảo sát trước thời gian hiện tại");
        }
        else {
            var fbJson = @Html.Raw(ViewBag.listJson);
            for (var i = 0; i < fbJson.length; i++) {
                if ((startTime - new Date(fbJson[i].StartTime)) == 0) {
                    $('#errorTime').html("Thời gian của khảo sát trùng với thời gian của 1 khảo sát khác");
                    $('#errorTime').addClass("prevented");
                    check = false;
                    break;
                }
                @*else if ((startTime - new Date(fbJson[i].StartTime) > 0 && new Date(fbJson[i].EndTime) - startTime) > 0) {
                    if (!$('#errorTime').hasClass("prevented")) {
                        $('#errorTime').html("Một phần thời gian của khảo sát trùng với khảo sát khác. Nếu bạn vẫn muốn tiếp tục, hãy nhấn chi tiết");
                        $('#errorTime').addClass("prevented");
                        check = false;
                        break;
                    }
                } else if ((endTime - new Date(fbJson[i].StartTime) > 0 && new Date(fbJson[i].EndTime) - endTime) > 0) {
                    if (!$('#errorTime').hasClass("prevented")) {
                        $('#errorTime').html("Một phần thời gian của khảo sát trùng với khảo sát khác. Nếu bạn vẫn muốn tiếp tục, hãy nhấn chi tiết");
                        $('#errorTime').classList.add('prevent');
                        check = false;
                        break;
                    }
                }*@
            }
        }
        if (check) {
            $('#errorTime').removeClass("prevented");
        }
        return check;
    }

    //valid field in form
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Get the forms we want to add validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (!validateDate()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

<!-- Popup insert -->
<div class="modal" id="createNew">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Html.BeginForm("CreateDetail", "Feedback", FormMethod.Post, new { @class = "needs-validation", onsubmit = "return validateDate();" }))
            {
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Thêm mới khảo sát</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    <fieldset>
                        <div style="width: 65%; float:left;">
                            <div class="form-group">
                                <label for="equipName">Tiêu đề</label>
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @id = "equipName", @required = "require" })
                                <div class="invalid-feedback">Please fill out this field.</div>
                            </div>
                            <div class="form-group">
                                <label for="equipGroupName">* Mô tả</label><br />
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @id = "equipName", @required = "require" })
                                <div class="invalid-feedback">Please fill out this field.</div>
                            </div>
                        </div>
                        <div class="form-group" style="width: 33%; float:left; margin-left: 15px;">
                            <button type="button" data-toggle="modal" data-target="#chooseImage" onclick="showImage()" id="newImage">Chọn ảnh</button>
                            <br />
                            <div style="float:left; height: 75px; padding-left: 50px;" id="imageCreate"></div>
                            @Html.Hidden("imageIndex", 0, new { @id = "imageIndex" })
                        </div>
                        <div class="form-group" style="float:left; width: 48%;">
                            <label for="equipGroupType">* Mã cảm ơn</label><br />
                            @Html.DropDownListFor(model => model.ThanksSentenceId, new SelectList(ViewBag.listThanks, "ThanksSentenceId", "ThanksSentenceId"), new { @class = "extra-class" })
                        </div>
                        <div class="form-group" style="float:left; width: 50%; margin-left: 13px;">
                            <label>Mã quà tặng</label>
                            @Html.DropDownListFor(model => model.GiftId, new SelectList(ViewBag.listGift, "GiftId", "GiftId"), "", new { @class = "extra-class" })
                        </div>
                        <div class="form-group" style="width: 48%; float: left;">
                            <label for="equipName">* Thời gian bắt đầu:</label> <br />
                            <input type="text" class="extra-class" id="hourBegin" pattern="[01]?[0-9]{1}|2[0-3]{1}" title="0-24 hour" style="width: 25%" required /> :
                            <input type="text" class="extra-class" id="minuteBegin" pattern="[0-5]{1}[0-9]{1}" title="0-59 minute" style=" width: 25%" required />
                            <input type="text" class="extra-class" id="startDate" style="margin-left: 10px; width: 42%" required />
                        </div>
                        <div class="form-group" style="width: 50%; margin-left: 13px; float: left;">
                            <label>* Thời gian kết thúc:</label> <br />
                            <input type="text" class="extra-class" id="hourEnd" name="hourEnd" pattern="[01]?[0-9]{1}|2[0-3]{1}" title="0-24 hour" style="width: 26%" required /> :
                            <input type="text" class="extra-class" id="minuteEnd" name="minuteEnd" pattern="[0-5]{1}[0-9]{1}" title="0-59 minute" style="width: 26%" required />
                            <input type="text" class="extra-class" id="endDate" style="margin-left: 10px; width: 41%" required />
                        </div>
                        <div class="form-group" id="errorTime" style="width: 100%; height: 15px; float: left"></div>
                        <div class="form-group">
                            <select id="equipmentDropDown" class="extra-class" name="equipmentDropDown" style="width: 35%; height: 100px; float: left;" multiple>
                                @{ if (ViewBag.listEquip != null)
                                    {
                                        List<ModelsFeedbackSystem.Models.Equipment> listEquip = (List<ModelsFeedbackSystem.Models.Equipment>)ViewBag.listEquip;
                                        var group = "";
                                        for (var i = 0; i < listEquip.Count; i++)
                                        {
                                            if (!listEquip[i].EquipmentGroupId.Equals(group))
                                            {
                                                group = listEquip[i].EquipmentGroupId;
                                                <optgroup label="@group" onclick="chooseAll('@group')"></optgroup>
                                            }
                                            <option value="@listEquip[i].EquipmentId" class="@group">&nbsp; @listEquip[i].EquipmentId</option>
                                        }
                                    }
                                }
                            </select>
                            @Html.TextAreaFor(model => model.EquipmentIds, new { @class = "form-control", @id = "equipmentId", @required = "require" })
                            <div class="invalid-feedback">Please fill out this field.</div>
                        </div>

                        @Html.HiddenFor(model => model.BrandId, new { @id = "brandId" })
                        @Html.HiddenFor(model => model.Username, new { @id = "username" })
                        @Html.HiddenFor(model => model.ImageId, new { @id = "imageId" })
                        @Html.HiddenFor(model => model.StartTime, new { @id = "startTime" })
                        @Html.HiddenFor(model => model.EndTime, new { @id = "endTime" })
                        @Html.HiddenFor(model => model.CreateDate, new { @id = "createDate" })
                        @Html.HiddenFor(model => model.State, new { @id = "state" })
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                    <input type="submit" id="submitCreateForm" class="popup-btn-confirm mr-1" value="Chi tiết" onclick="createValue()" />
                </div>
            }
        </div>
    </div>
</div>

<!-- Popup chooseImage -->
<div class="modal" id="chooseImage" style="border: 1px solid black; width: 100%">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12" id="container"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                <button type="button" class="popup-btn-confirm mr-1" data-dismiss="modal" id="confirmImage">OK</button>
            </div>
            
        </div>
    </div>
</div>

<!-- Popup delete -->
<div class="modal" id="delete">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Html.BeginForm("DeleteFeedback", "Feedback", FormMethod.Post))
            {
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Xác nhận</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    Bạn có muốn xóa khảo sát này?
                </div>
                <div class="modal-footer">
                    @Html.HiddenFor(model => model.FeedbackId, new { @id = "delFeedbackId" })
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                    <input type="submit" class="popup-btn-confirm mr-1" value="OK" />
                </div>
            }
        </div>
    </div>
</div>

<!-- Popup show detail -->
<div class="modal" id="showDetail">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="padding-left: 20px; padding-right: 20px; height:480px; width: 90%;">
            <h1 style="font-family: Calibri;">Chi tiết</h1>
            <table class="detailTable">
                <tr class="detailTr">
                    <td class="detailTd1">Mã khảo sát:</td>
                    <td id="detailFeedbackId"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Tên khảo sát:</td>
                    <td id="detailFeedbackName"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Mô tả:</td>
                    <td id="detailFeedbackDes"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Mã cảm ơn:</td>
                    <td id="detailThanksId"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Mã quà tặng:</td>
                    <td id="detailGiftId"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Thời gian bắt đầu:</td>
                    <td id="detailStartTime"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Thời gian kết thúc:</td>
                    <td id="detailEndTime"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Trạng thái:</td>
                    <td id="detailFeedbackState"></td>
                </tr>
                <tr class="detailTr">
                    <td class="detailTd1">Ngày tạo:</td>
                    <td id="detailFeedbackDate"></td>
                </tr>
            </table>
            <button type="button" class="btn btn-danger btnCloseDetail" data-dismiss="modal" style="top: 427px;">Đóng</button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="page-header">
            <h2 class="pageheader-title">Quản lý khảo sát</h2>
            <button type="button" class="pageheader-createbutton" data-toggle="modal" data-target="#createNew">Thêm mới</button>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- end pageheader -->
<!-- ============================================================== -->
<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
    <div class="card">
        <h5 class="card-header">Quản lí khảo sát</h5>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered first">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Mã khảo sát</th>
                            <th>Tiêu đề</th>
                            <th>Ngày bắt đầu</th>
                            <th>Ngày kết thúc</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>#</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ if (ViewBag.listFeedback != null)
                            {

                                List<ModelsFeedbackSystem.Models.Feedback> list = (List<ModelsFeedbackSystem.Models.Feedback>)ViewBag.listFeedback;
                                for (int i = 0; i < list.Count; i++)
                                {
                                    <tr>
                                        <td class="column1-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@(i+1)</td>
                                        <td class="column2-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@list[i].FeedbackId</td>
                                        <td class="column3-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@list[i].Title</td>
                                        <td class="column4-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@list[i].StartTime</td>
                                        <td class="column5-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@list[i].EndTime</td>
                                        @if (@list[i].State == 1)
                                        {
                                            <td class="column6-feedback" data-toggle="modal" data-target="#showDetail" style="color: limegreen" onclick="getDetail('@i')">Đã kích hoạt</td>
                                        }
                                        else
                                        {
                                            <td class="column6-feedback" style="color: red" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">Chưa kích hoạt</td>
                                        }
                                        <td class="column7-feedback" data-toggle="modal" data-target="#showDetail" onclick="getDetail('@i')">@list[i].CreateDate</td>
                                        <td>
                                            <div class="dropdown dropleft">
                                                <button class="button-more"><i class="fa fa-ellipsis-v"></i></button>
                                                <div id="more-content" class="dropdown-more-content">
                                                    <a href="#detail" onclick="showDetail('@list[i].FeedbackId')">Chi tiết</a>
                                                    <a href="#delete" data-toggle="modal" data-target="#delete" onclick="getFeedbackId('@list[i].FeedbackId')">Xóa</a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- Optional JavaScript -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.colVis.min.js"></script>
<script src="https://cdn.datatables.net/rowgroup/1.0.4/js/dataTables.rowGroup.min.js"></script>
<script src="https://cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
<script src="https://cdn.datatables.net/fixedheader/3.1.5/js/dataTables.fixedHeader.min.js"></script>
<script src='https://kit.fontawesome.com/a076d05399.js'></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#startDate").datepicker();
            $("#endDate").datepicker();
        })
    </script>
}

